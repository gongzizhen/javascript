/***
 *  js 引擎在任何代码执行之前,会先读取函数声明,并在执行上下文中生成函数定义.
 *   而函数表达式必须等到代码执行到它的时候,才会在执行上下文中生成函数定义
 */
console.log('------ 函数声明 -------');
console.log(sum(1, 10));
function sum(num1, num2) {
    return num1 + num2;
};
/**
 *  函数声明,会在任何代码执行之前被读取并添加到执行上下文;
 *  这个过程叫作 函数声明提升;
 *  所有 sum() 函数可以在声明之前运行
 *  如果是函数表达式就会报错
 *   sum(); // 会报错
 *  let sum = function() {};
 * 
 *  函数声明与函数表达式唯一的区别就是 
 *  函数声明存在 函数声明提升;
 *  函数表达式 不存在;
 * 
 */
